<div class="min-h-screen bg-[#0F172A]">
  <main>
    <section class="py-8 sm:py-12 bg-[#0F172A] text-white relative overflow-hidden">
      <div class="container mx-auto px-4 relative">
        <div class="max-w-7xl mx-auto">
          
          <!-- Header -->
          <div class="mb-8">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-4">
                <%= link_to app_recurring_social_media_contents_path, 
                    class: "flex items-center justify-center w-10 h-10 bg-gray-700/50 hover:bg-gray-600/50 border border-gray-600/50 rounded-lg transition-colors" do %>
                  <i data-lucide="arrow-left" class="h-4 w-4 text-gray-400"></i>
                <% end %>
                <div>
                  <h1 class="font-bold text-3xl text-gray-100">Create Recurring Social Media Campaign</h1>
                  <p class="text-gray-400 mt-1">Set up automated content generation for LinkedIn or X (Twitter)</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Flash Messages -->
          <% if flash[:alert] || flash[:notice] %>
            <div class="mb-6">
              <% if flash[:alert] %>
                <div class="p-4 bg-red-500/10 border border-red-500/30 rounded-lg text-red-400 mb-4">
                  <div class="flex items-center">
                    <i data-lucide="alert-circle" class="h-4 w-4 mr-2 flex-shrink-0"></i>
                    <%= flash[:alert] %>
                  </div>
                </div>
              <% end %>
              
              <% if flash[:notice] %>
                <div class="p-4 bg-green-500/10 border border-green-500/30 rounded-lg text-green-400">
                  <div class="flex items-center">
                    <i data-lucide="check-circle" class="h-4 w-4 mr-2 flex-shrink-0"></i>
                    <%= flash[:notice] %>
                  </div>
                </div>
              <% end %>
            </div>
          <% end %>

          <!-- Main Content -->
          <%= form_with model: [:app, @recurring_content], class: "space-y-8", data: { controller: "bulk-generation keyword-filter platform-selector" } do |f| %>
            <div class="max-w-7xl mx-auto space-y-6">
              
              <!-- Campaign Settings -->
              <div class="bg-[#1E293B]/80 backdrop-blur-sm border border-yellow-500/20 rounded-xl shadow-[0_0_30px_rgba(234,179,8,0.1)] overflow-hidden">
                <div class="bg-gradient-to-r from-purple-500/10 via-pink-500/10 to-red-500/10 border-b border-yellow-500/20 px-6 py-4">
                  <div class="flex items-center">
                    <div class="flex items-center justify-center w-8 h-8 bg-purple-500/20 border border-purple-500/30 rounded-lg mr-3">
                      <i data-lucide="repeat" class="h-4 w-4 text-purple-400"></i>
                    </div>
                    <div>
                      <h2 class="text-lg font-semibold text-gray-100">Campaign Settings</h2>
                      <p class="text-sm text-gray-400">Configure platform and posting frequency</p>
                    </div>
                  </div>
                </div>
                
                <div class="p-6 space-y-6">
                  <!-- Platform Selection -->
                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-3">Platform</label>
                    <div class="grid grid-cols-2 gap-4">
                      <div class="relative">
                        <%= f.radio_button :platform, "linkedin", id: "platform_linkedin", class: "peer sr-only", data: { action: "change->platform-selector#updatePrompts", platform_selector_new_form_value: true } %>
                        <label for="platform_linkedin" class="flex items-center p-4 border-2 border-yellow-500/30 rounded-lg cursor-pointer transition-all hover:border-yellow-500/50 peer-checked:border-yellow-500 peer-checked:bg-yellow-500/10 peer-checked:shadow-[0_0_15px_rgba(234,179,8,0.2)]">
                          <div class="flex items-center justify-center w-8 h-8 bg-blue-500/20 border border-blue-500/30 rounded mr-3">
                            <i data-lucide="linkedin" class="h-4 w-4 text-blue-400"></i>
                          </div>
                          <div>
                            <div class="text-sm font-medium text-gray-300">LinkedIn</div>
                            <div class="text-xs text-gray-400">Professional network</div>
                          </div>
                        </label>
                      </div>
                      
                      <div class="relative">
                        <%= f.radio_button :platform, "x", id: "platform_x", class: "peer sr-only", data: { action: "change->platform-selector#updatePrompts", platform_selector_new_form_value: true } %>
                        <label for="platform_x" class="flex items-center p-4 border-2 border-yellow-500/30 rounded-lg cursor-pointer transition-all hover:border-yellow-500/50 peer-checked:border-yellow-500 peer-checked:bg-yellow-500/10 peer-checked:shadow-[0_0_15px_rgba(234,179,8,0.2)]">
                          <div class="flex items-center justify-center w-8 h-8 bg-gray-500/20 border border-gray-500/30 rounded mr-3">
                            <i data-lucide="twitter" class="h-4 w-4 text-gray-400"></i>
                          </div>
                          <div>
                            <div class="text-sm font-medium text-gray-300">X (Twitter)</div>
                            <div class="text-xs text-gray-400">Social network</div>
                          </div>
                        </label>
                      </div>
                    </div>
                  </div>

                  <div class="p-6">
                    <% 
                      platform = f.object.platform || "linkedin"
                      provider_name = platform == "x" ? "twitter2" : platform
                      authentication_providers = Current.user.authentication_providers.where(provider: provider_name)
                    %>
                    <%= render "authentication_provider_selection_area", 
                        authentication_providers: authentication_providers, 
                        platform: platform,
                        selected_provider_id: f.object.authentication_provider_id %>
                    <p class="mt-1 text-sm text-gray-400">Select which account to use for automatic publishing</p>
                  </div>

                  <!-- Frequency -->
                  <div class="-mt-6">
                    <label class="block text-sm font-medium text-gray-300 mb-2">Posting Frequency</label>
                    <%= f.number_field :frequency, min: 15, step: 15, placeholder: "120", 
                        class: "block w-full px-4 py-3 rounded-lg bg-[#0F172A]/70 border border-yellow-500/30 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-200" %>
                    <p class="mt-1 text-sm text-gray-400">Minutes between posts (e.g., 60 = hourly, 1440 = daily). Minimum 15 minutes.</p>
                  </div>

                  <!-- Activation -->
                  <div class="flex items-center p-4 bg-green-500/10 border border-green-500/30 rounded-lg">
                    <%= f.check_box :is_active, class: "h-4 w-4 text-green-500 focus:ring-green-500 border-gray-300 rounded mr-3" %>
                    <%= f.label :is_active, "Start campaign immediately", class: "text-sm font-medium text-green-300" %>
                    <p class="ml-auto text-xs text-green-400">Can be toggled later</p>
                  </div>
                </div>
              </div>

              <!-- Keywords Selection (REUSE) -->
              <%= render "shared/keywords_selection_section", domains: @domains, selected_keyword_ids: [] %>

              <!-- AI Content Settings (REUSE) -->
              <%= render "shared/ai_content_settings_section", form: f, model_groups: @model_groups, platform: f.object.platform || "linkedin" %>

              <!-- Action Buttons -->
              <div class="bg-[#1E293B]/80 backdrop-blur-sm border border-gray-500/20 rounded-xl p-6">
                <div class="flex items-center justify-between">
                  <div class="flex space-x-3" id="action-buttons">
                    <%= f.submit "Create Recurring Campaign", 
                        class: "px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 hover:from-yellow-600 hover:to-red-600 text-white rounded-lg font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] hover:scale-105 inline-flex items-center",
                        data: { bulk_generation_target: "submit" } do %>
                      <i data-lucide="repeat" class="h-4 w-4 mr-2"></i>
                      Create Recurring Campaign
                    <% end %>
                    <%= link_to "Cancel", app_recurring_social_media_contents_path, 
                        class: "px-6 py-3 bg-transparent border-2 border-gray-500/30 rounded-lg font-semibold transition-all duration-200 hover:border-gray-400/50 hover:bg-gray-500/10 text-gray-300 hover:text-white" %>
                  </div>
                  
                  <div class="flex space-x-3">
                    <!-- Info -->
                    <div class="hidden md:flex items-center space-x-2 text-sm text-gray-400 px-4 py-3">
                      <i data-lucide="info" class="h-4 w-4"></i>
                      <span>Auto-generated content</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </section>
  </main>
</div>

<script>
// Initialize Lucide icons
if (window.lucide) lucide.createIcons();

// Form validation
document.addEventListener('turbo:load', function() {
  const mainForm = document.querySelector('form[data-controller*="bulk-generation"]');
  if (mainForm) {
    // Trigger platform updates on page load if platform is pre-selected
    const selectedPlatform = document.querySelector('input[name="recurring_social_media_content[platform]"]:checked');
    if (selectedPlatform) {
      // Trigger the platform selector to update prompts and auth providers
      const event = new Event('change', { bubbles: true });
      selectedPlatform.dispatchEvent(event);
    }

    mainForm.addEventListener('submit', function(e) {
      const selectedPlatform = document.querySelector('input[name="recurring_social_media_content[platform]"]:checked');
      const selectedKeywords = document.querySelectorAll('input[name="keyword_ids[]"]:checked');
      const selectedAuthProvider = document.querySelector('input[name="recurring_social_media_content[authentication_provider_id]"]:checked');
      const frequency = document.querySelector('input[name="recurring_social_media_content[frequency]"]').value;
      
      if (!selectedPlatform) {
        e.preventDefault();
        alert('Please select a platform (LinkedIn or X).');
        return false;
      }
      
      if (!frequency || frequency < 15) {
        e.preventDefault();
        alert('Please set a frequency of at least 15 minutes.');
        return false;
      }
      
      if (selectedKeywords.length === 0) {
        e.preventDefault();
        alert('Please select at least one keyword for content generation.');
        return false;
      }

      if (!selectedAuthProvider) {
        e.preventDefault();
        alert('Please select an authentication provider for auto-publishing.');
        return false;
      }
    });
  }
});

// Re-initialize Lucide icons after Turbo updates
document.addEventListener('turbo:frame-load', function() {
  if (window.lucide) {
    lucide.createIcons();
  }
});
</script> 